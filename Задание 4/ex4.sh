#! /bin/bash
#Запуск скрипта: bash ex4.sh <размер шингла> <первый файл> <второй файл> <первый словарь> <второй словарь> <файл-отчет>   (то что в скобках это аргументы скрипта)
#Пример запуска bash ex4.sh 3 text1.txt text2.txt dict1.csv dict2.csv report.txt
 shingleSize=$1 # Объявляем переменные в которые будут записываться значения 1-6 аргументов 
 InFile1=$2   #
 InFile2=$3  #
 DictFile1=$4   #
 DictFile2=$5      #
 outfile=$6     # P.S. Показывать файл лучше без этих комментариев
 
 
 echo > $outfile # удаляем содержимое файла отчета если файл непустой 
filesize1=$(stat -c%s $InFile1) # Вычисляем размер файла 1 в байтах
Mdata1=$(date -r $InFile1) # В переменную Mdata1 записываем дату последгнего изменения файла 1
filesize2=$(stat -c%s $InFile2) # Аналогично для второго файла
Mdata2=$(date -r $InFile2) #
declare exclusions=(',' '.' '/' '\' '|' '!' '@' '#' '$' '%' '^' ':' ';' '`' '~' '<' '>' \' ) # Вводим массив исключений, которые будут убираться из текста перед делением на шинглы
echo > tempfile1.txt # Создаем временный файл, в который будем записывать обработанный текст
while read str # Читаем первый файл построчно, while read считывает строку и записывает в переменную str до тех пор пока файл не закончится
do
    str=${str,,}  # такая конструкция приводит строку к нижнему регистру(все символы становятся строчными)
    str=${str//' '} # эта конструкция убирает из строки все пробелы
    for i in ${exclusions[@]} # Теперь идем по словарю исключений и удаляем из строки все символы, которые являются знаками препинания
        do
        str=${str//$i} # точки заяптые тире и прочее убирается здесь
    done
    echo -n "$str" >> tempfile1.txt #записываем сплошной текст получившийся из считанной строки во временный файл 
done < $InFile1 # с помощью конструкции < $InFile цикл понимает откуда нужно брать строки
declare -A shingles  # Объявляем ассоциативный массив (словарь)
while read -N $shingleSize shingle #Читаем из временного файла сплошной текст по $shingleSize символов за раз и присваиваем результат переменной shingle
    do
    if [ ${shingles[$shingle]+_} ] # Проверяем есть ли в словаре прочитанные символы
        then
            shingles[$shingle]=$((${shingles[$shingle]}+1)) #Если есть - прибавляем к значению ключа shingle единицу
        else
            shingles+=( [$shingle]=1 )  #Если нет добавляем ключ и присваиваем ему значение 1
    fi
done < tempfile1.txt

echo > tempfile2.txt #Те же действия проделываем для второго файла
while read str
do
    str=${str,,}
    str=${str//' '}
    for i in ${exclusions[@]}
    do
        str=${str//$i}
    done
    echo -n "$str" >> tempfile2.txt
done < $InFile2
declare -A shingles1
while read -N $shingleSize shingle
do
    if [ ${shingles1[$shingle]+_} ]
        then
            shingles1[$shingle]=$((${shingles1[$shingle]}+1))
        else
            shingles1+=( [$shingle]=1 )
    fi
done < tempfile2.txt
rm temp* #Временные файлы больше не нужны, их можно удалить
num1=0  #В эту переменную будет записываться количество уникальных шинглов
total1=0  #В эту переменную будет записываться общее количество шинглов
echo "Порядковый номер;Шингл;Повторений" > $DictFile1 #Делаем загроловок в файле-словаре (не путать со словарем шинглов)
for i in ${!shingles[@]} # @ означает все члены словаря ! - ключи
do
    ((num1++)) # каждый новый ключ - уникальных шингл для этого файла, добавляем единицу 
    temp=${shingles[$i]} #Для удобства поместил значение текущего ключа в переменную
    total1=$((${shingles[$i]}+$total1))  #поскольку значениями в словаре являются количества шинглов, складываем их в каждой итерации цикла с переменной  total1
    echo "$num1;$i;${shingles[$i]}" >> $DictFile1 #В файл-словарь записываем порядковый номер шингл и количество его вхождений в файле
done
echo -e "File: $InFile1\nSize: $filesize1\nMDate: $Mdata1\nSCount: $total1\nSUniqCount: $num1\n" >> $outfile #запись в отчете про первый файл

num2=0 #та же самая операция для второго файла
total2=0
echo "Порядковый номер;Шингл;Повторений" > $DictFile2
for i in ${!shingles1[@]}
do
    ((num2++))
    total2=$((${shingles1[$i]}+$total2))
    echo "$num2;$i;${shingles1[$i]}" >> $DictFile2
done
echo -e "File: $InFile2\nSize: $filesize2\nMDate: $Mdata2\nSCount: $total2\nSUniqCount: $num2" >> $outfile

#Вычисление коэффициента Жаккара
Dis=0 #Сюда запишем совпадающие шинглы двух файлов
Con1=0 #Сюда различающиеся
for i in ${!shingles[@]} #идем по каждому шинглу первого файла
do
    if [ -v shingles1[$i] ] # и проверяем есть ли он во втором файле
    then
        ((Dis++)) #если есть пополняем значение общих шинглов
    else
        ((Con1++)) # если нет - пополняем счетчик уникальных шинглов 1 файла
    fi
done
Con2=0 # для второго файла считаем только его уникальные шинглы
for i in ${!shingles1[@]}
do
    if [ ! -v shingles1[$i] ]
    then
        ((Con2++))
    fi
done
Con=$(($Con1+$Con2+$Dis)) # Общее число уникальных шинглов для двух файлов
KJ=$(echo "$Dis/$Con" | bc -l) # Вычисляем коэффициент Жаккара 
echo -e "Con = $Con\nDis = $Dis\nKJ = $KJ" >> $outfile #Делаем запись в файл отчет


